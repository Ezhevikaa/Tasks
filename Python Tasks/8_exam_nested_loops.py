# На обработку поступает натуральное число.
# Нужно написать программу, которая выводит на экран сумму чётных цифр этого числа или 0, если чётных цифр в записи нет.
# Программист торопился и написал программу неправильно.
# Найдите все ошибки в этой программе (их может быть одна или несколько).
# Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк.
# Было
n = input()
s = 0
while n > 10:
    if n % 2 == 1:
        s = n % 10
    n //= 10
print(s)

# Стало
n = int(input())
s = 0
while n > 0:
    if n % 2 == 0:
        s += n % 10
    n //= 10
print(s)


# На обработку поступает последовательность из 8 целых чисел.
# Известно, что вводимые числа по абсолютной величине не превышают 10^12.
# Нужно написать программу, которая выводит на экран количество делящихся нацело на 4 чисел
# в исходной последовательности и максимальное делящееся нацело на 4 число.
# Если делящихся нацело на 4 чисел нет, требуется на экран вывести «NO».
# Программист торопился и написал программу неправильно.
# Найдите все ошибки в этой программе (их может быть одна или несколько).
# Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк.
# Было
n = 7
count = 0
maximum = 1000
for i in range(1, n + 1):
    x = int(input())
    if x // 4 == 0:
        count += 1
        if x < maximum:
            maximum = x
if count > 0:
    print(count)
    print(maximum)
else:
    print('NO')

# Стало
n = 8
count = 0
maximum = -10 ** 12
for i in range(1, n + 1):
    x = int(input())
    if x % 4 == 0:
        count += 1
        if x > maximum:
            maximum = x
if count > 0:
    print(count)
    print(maximum)
else:
    print('NO')


# На обработку поступает последовательность из 4 целых чисел.
# Известно, что вводимые числа по абсолютной величине не превышают 10^8
# Нужно написать программу, которая выводит на экран количество нечётных чисел
# в исходной последовательности и максимальное нечётное число.
# Если нечётных чисел нет, требуется на экран вывести «NO». Программист торопился и написал программу неправильно.
# Найдите все ошибки в этой программе (их может быть одна или несколько).
# Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк.
# Было
n = 4
count = 0
maximum = 999
for i in range(1, n + 1):
    x = int(input())
    if x % 2 != 0:
        count += 1
        if x > maximum:
            maximum = i
            break
if count > 0:
    print(count)
    print(maximum)
else:
    print('NO')

# Стало
n = 4
count = 0
maximum = 0
for i in range(1, n + 1):
    x = int(input())
    if x % 2 != 0:
        count += 1
        if x > maximum:
            maximum = x
if count > 0:
    print(count)
    print(maximum)
else:
    print('NO')

# На вход программе подается натуральное число n.
# Напишите программу, которая печатает звездную рамку размерами n×19.
# На вход программе подаётся натуральное число n∈[3;19] — высота звездной рамки.
n = int(input())
print(19 * '*')
for i in range(n - 2):
    print('*' + ' ' * 17 + '*')
print(19 * '*')


# Дано натуральное число n, (n > 99).
# Напишите программу, которая определяет его третью (с начала) цифру.
# На вход программе подается одно натуральное число, состоящее как минимум из трех цифр.
n = int(input())
lenght = len(str(n))
third_num = n % (10 ** (lenght - 2)) // 10 ** (lenght - 3)
print(third_num)


# Дано натуральное число. Напишите программу, которая вычисляет:
# количество цифр 3 в нем;
# сколько раз в нем встречается последняя цифра;
# количество четных цифр;
# сумму его цифр, больших пяти;
# произведение цифр, больших семи (если цифр больших семи нет, то вывести 1, если такая цифра одна, то вывести ее);
# сколько раз в нем встречается цифры 0 и 5 (всего суммарно).
counter_1 = 0
counter_2 = 0
counter_3 = 0
counter_4 = 0
total = 0
multy = 1
n = int(input())
a = n % 10
while n > 0:
    num = n % 10
    if num == 3:
        counter_1 += 1
    if num == a:
        counter_4 += 1
    if num % 2 == 0:
        counter_2 += 1
    if num > 5:
        total += num
    if num > 7:
        multy *= num
    if num == 0:
        counter_3 += 1
    if num == 5:
        counter_3 += 1
    n = n // 10
print(counter_1, counter_4, counter_2, total, multy, counter_3, sep='\n')


# Сриниваса Рамануджан – индийский математик, славившийся своей интуицией в области чисел.
# Когда английский математик Годфри Харди навестил его однажды в больнице, он обмолвился,
# что номером такси, на котором он приехал, было 1729, такое скучное и заурядное число. На что Рамануджан ответил:
# "Нет, нет! Это очень интересное число. Это наименьшее число, выражаемое как сумма двух кубов двумя разными способами".
# Другими словами:
# 1729 = 1^3 + 12^3 = 9^3 + 10^3.
# Напишите программу, которая находит аналогичные интересные числа.
# В ответе запишите первые 5 чисел в порядке возрастания, включая число 17291729.
# Используйте вложенный цикл.
# Это некрасивый и недоработанный код. Но он свою функцию выполнил - 5 чисел у меня есть.
for a in range(1, 33):
    for b in range(1, 33):
        for c in range(1, 33):
            for d in range(1, 33):
                if a != b and a != c and a != d and b != c and b != d and c != d:
                    if a ** 3 + b ** 3 == c ** 3 + d ** 3:
                        print(a ** 3 + b ** 3)

