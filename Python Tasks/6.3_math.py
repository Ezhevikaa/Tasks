from math import *

# На плоскости евклидово расстояние между двумя точками(x1, y1) (x2,y2)
# определяется так p = sqrt{(x_1 - x_2) ^ 2 + (y_1 - y_2) ^ 2}
# Напишите программу, определяющую евклидово расстояние между двумя точками, координаты которых заданы.
# На вход программе подается четыре вещественных числа, каждое на отдельной строке
# x1, y1, x2, y2 = float(input()), float(input()), float(input()), float(input())
# p = sqrt(pow((x1 - x2), 2) + pow((y1 - y2), 2))
# print(p)


# Напишите программу, определяющую площадь круга и длину окружности по заданному радиусу RR.
# На вход программе подается одно вещественное число R.
# Программа должна вывести два числа – площадь круга и длину окружности радиуса R
# Используйте константу math.pi
# R = float(input())
# S = pi * pow(R, 2)
# C = 2 * pi * R
# print(S, C, sep= '\n')


# В математике выделяют следующие средние значения: арифметическое, геометрическое,
# гармоническое, квадратичное
# На вход программе подается два вещественных числа a и b, каждое на отдельной строке.
# Программа должна вывести 4 числа.
# a, b = float(input()), float(input())
# Ar = (a + b) / 2
# Ge = sqrt(a * b)
# Ga = (2 * a * b) / (a + b)
# Qw = sqrt((a ** 2 + b ** 2) / 2)
# print(Ar, Ge, Ga, Qw, sep= '\n')


# Напишите программу, вычисляющую значение тригонометрического выражения
# sin x + cos x + tan^2 x по заданному числу градусов x.
# На вход программе подается одно вещественное число x измеряемое в градусах.
# Программа должна вывести одно число – значение тригонометрического выражения.
# Тригонометрические функции принимают аргумент в радианах. Чтобы перевести градусы в радианы, воспользуйтесь формулой
# x = float(input())
# y = radians(x)
# print(sin(y) + cos(y) + pow(tan(y), 2))


# Напишите программу, вычисляющую значение ceil x + floor x по заданному вещественному числу x.
# На вход программе подается одно вещественное число x.
# x = float(input())
# print(ceil(x) + floor(x))


# Даны три вещественных числа a, b, c. Напишите программу, которая находит вещественные корни квадратного уравнения
# ax^2 + bx + c = 0.
# На вход программе подается три вещественных числа a!=0, b, c, каждое на отдельной строке.
# Программа должна вывести вещественные корни уравнения если они существуют или текст «Нет корней» в противном случае.
# Если уравнение имеет два корня, то следует вывести их в порядке возрастания.
# a, b, c = float(input()), float(input()), float(input())
# D = pow(b, 2) - 4 * a * c
# if D > 0:
#     x = ((- b) - sqrt(D)) / (2 * a)
#     y = ((- b) + sqrt(D)) / (2 * a)
#     print(min(x, y), max(x, y), sep= '\n')
# elif D == 0:
#     print((- b) / (2 * a))
# elif D < 0:
#     print('Нет корней')


# Правильный многоугольник — выпуклый многоугольник, у которого равны все стороны и все углы между смежными сторонами.
# Площадь правильного многоугольника с длиной стороны a и количеством сторон n вычисляется по формуле.
# Даны два числа: натуральное число n и вещественное число a. Напишите программу,
# которая находит площадь указанного правильного многоугольника.
n, a = int(input()), float(input())
S = (n * pow(a, 2)) / (4 * tan(pi / n))
print(S)
